# Puerto del servicio
%dev.quarkus.http.port=${QUARKUS_HTTP_PORT}

# Keycloak OIDC
%dev.quarkus.oidc.auth-server-url=http://localhost:8080/realms/cinema
%prod.quarkus.oidc.auth-server-url=${QUARKUS_OIDC_AUTH_SERVER_URL}
quarkus.oidc.client-id=${QUARKUS_OIDC_CLIENT_ID}
quarkus.oidc.application-type=${QUARKUS_OIDC_APP_TYPE}

# Roles desde el access token
quarkus.oidc.roles.source=${QUARKUS_OIDC_ROLES_SOURCE}
quarkus.oidc.roles.role-claim-path=${QUARKUS_OIDC_ROLE_PATH}

# Permisos públicos
quarkus.http.auth.permission.public.paths=${QUARKUS_PUBLIC_PATHS}
quarkus.http.auth.permission.public.policy=permit

# Permitir preflight OPTIONS sin auth
quarkus.http.auth.permission.cors.paths=/api/*
quarkus.http.auth.permission.cors.methods=OPTIONS
quarkus.http.auth.permission.cors.policy=permit

# Proteger solo métodos de negocio reales
quarkus.http.auth.permission.protected.paths=/api/*
quarkus.http.auth.permission.protected.methods=GET,POST,PUT,PATCH,DELETE
quarkus.http.auth.permission.protected.policy=authenticated

# Debug
quarkus.log.category."io.quarkus.oidc".level=DEBUG
quarkus.log.category."io.quarkus.security".level=DEBUG
quarkus.log.category."io.quarkus.vertx.http.runtime.security".level=DEBUG

# Keycloak Admin API integration
%dev.keycloak.admin.url=http://localhost:8080
%prod.keycloak.admin.url=${ADMIN_URL}

keycloak.admin.realm=${REALM}
keycloak.admin.client-id=${CLIENT_ID}
keycloak.admin.client-secret=${CLIENT_SECRET}

quarkus.oidc.token.audience=${QUARKUS_OIDC_AUDIENCE}
quarkus.oidc.authentication.user-info-required=false


quarkus.http.cors.enabled=${QUARKUS_HTTP_CORS}
%dev.quarkus.http.cors.origins=http://localhost:5173,http://localhost:8080,http://localhost:8081
%prod.quarkus.http.cors.origins=${QUARKUS_HTTP_CORS_ORIGINS}
quarkus.http.cors.methods=${QUARKUS_HTTP_CORS_METHODS}

quarkus.log.console.enable=true
quarkus.log.console.json=true
